name: Deploy to Amazon ECS

on:
  push:
    branches:
      - feature/update-2  # or any other branch you want to trigger from

env:
  AWS_REGION: eu-west-1                   # Your preferred AWS region
  ECR_REPOSITORY_APP: laravel-app-repo     # ECR repository for Laravel app
  ECR_REPOSITORY_DB: mysql-db-repo         # ECR repository for MySQL
  ECS_SERVICE: laravel-app-service         # ECS service name for Laravel
  ECS_CLUSTER: laravel-app-cluster         # ECS cluster name
  ECS_TASK_DEFINITION: .aws/task-def.json # Path to your ECS task definition
  CONTAINER_NAME_APP: laravel-app-container
  CONTAINER_NAME_DB: mysql-container

permissions:
  contents: read

jobs:
  deploy:
    name: Deploy to ECS
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ env.AWS_REGION }}

    - name: Create ECR repositories (if they don't exist)
      run: |
        aws ecr describe-repositories --repository-names ${{ env.ECR_REPOSITORY_APP }} || \
        aws ecr create-repository --repository-name ${{ env.ECR_REPOSITORY_APP }} --region ${{ env.AWS_REGION }}
        
        aws ecr describe-repositories --repository-names ${{ env.ECR_REPOSITORY_DB }} || \
        aws ecr create-repository --repository-name ${{ env.ECR_REPOSITORY_DB }} --region ${{ env.AWS_REGION }}

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1

    - name: Build, tag, and push Laravel app image to ECR
      id: build-laravel-image
      run: |
        docker build -t ${{ steps.login-ecr.outputs.registry }}/${{ env.ECR_REPOSITORY_APP }}:${{ github.sha }} .
        docker push ${{ steps.login-ecr.outputs.registry }}/${{ env.ECR_REPOSITORY_APP }}:${{ github.sha }}
      env:
        IMAGE_TAG: ${{ github.sha }}
    
    - name: Build, tag, and push MySQL image to ECR
      id: build-mysql-image
      run: |
        docker build -t ${{ steps.login-ecr.outputs.registry }}/${{ env.ECR_REPOSITORY_DB }}:${{ github.sha }} -f Dockerfile.mysql .
        docker push ${{ steps.login-ecr.outputs.registry }}/${{ env.ECR_REPOSITORY_DB }}:${{ github.sha }}
      env:
        IMAGE_TAG: ${{ github.sha }}

    - name: Update ECS task definition with new image URLs
      id: task-def
      uses: aws-actions/amazon-ecs-render-task-definition@v1
      with:
        task-definition: ${{ env.ECS_TASK_DEFINITION }}
        container-name: ${{ env.CONTAINER_NAME_APP }}
        image: ${{ steps.build-laravel-image.outputs.image }}
        
    - name: Deploy new ECS task definition
      uses: aws-actions/amazon-ecs-deploy-task-definition@v1
      with:
        task-definition: ${{ steps.task-def.outputs.task-definition }}
        service: ${{ env.ECS_SERVICE }}
        cluster: ${{ env.ECS_CLUSTER }}
        wait-for-service-stability: true
