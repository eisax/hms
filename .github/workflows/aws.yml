name: Deploy to Amazon ECS

on:
  push:
    branches:
      - feature/update-2  # or any other branch you want to trigger from

env:
  AWS_REGION: eu-west-1                   # Your preferred AWS region
  ECR_REPOSITORY_APP: laravel-app-repo     # ECR repository for Laravel app
  ECS_SERVICE: laravel-app-service         # ECS service name for Laravel
  ECS_CLUSTER: laravel-app-cluster         # ECS cluster name
  ECS_TASK_DEFINITION: task-def.json      # Path to your ECS task definition
  CONTAINER_NAME_APP: laravel-app-container

permissions:
  contents: read

jobs:
  deploy:
    name: Deploy to ECS
    runs-on: ubuntu-20.04

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ env.AWS_REGION }}

    - name: Create ECR repository if missing
      run: |
        echo "Checking if ECR repository exists..."
        aws ecr describe-repositories --repository-names ${{ env.ECR_REPOSITORY_APP }} --region ${{ env.AWS_REGION }} || \
        aws ecr create-repository --repository-name ${{ env.ECR_REPOSITORY_APP }} --region ${{ env.AWS_REGION }} && \
        echo "ECR repository created or already exists"

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1

    - name: Build, tag, and push Laravel app image to ECR
      run: |
        echo "Building Docker image for Laravel app..."
        docker build -t laravel-app .
    
        # Correct format for ECR image tag
        IMAGE_TAG="${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ env.AWS_REGION }}.amazonaws.com/${{ env.ECR_REPOSITORY_APP }}:${{ github.sha }}"
        docker tag laravel-app:latest $IMAGE_TAG
    
        echo "Pushing Docker image to ECR..."
        docker push $IMAGE_TAG
        
    - name: Update ECS task definition with new image URL
      id: task-def
      uses: aws-actions/amazon-ecs-render-task-definition@v1
      with:
        task-definition: ${{ env.ECS_TASK_DEFINITION }}
        container-name: ${{ env.CONTAINER_NAME_APP }}
        image: ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ env.AWS_REGION }}.amazonaws.com/${{ env.ECR_REPOSITORY_APP }}:${{ github.sha }}

    - name: Deploy to ECS
      uses: aws-actions/amazon-ecs-deploy-task-definition@v1
      with:
        task-definition: ${{ steps.task-def.outputs.task-definition }}
        service: ${{ env.ECS_SERVICE }}
        cluster: ${{ env.ECS_CLUSTER }}
        wait-for-service-stability: true
